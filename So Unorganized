# Imports______________________________________________________
import pygame   
import random
import math
import time
from os import path

#Image Upload Path__________________________________________________
img_dir = path.join(path.dirname(__file__), 'img')

#Defining Initialized Variables_____________________________________________

WIDTH = 699
HEIGHT = 600
FPS = 500

# define colors________________________________________________________
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)

# initialize pygame and create window____________________________________
pygame.init()
pygame.mixer.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Tower Defence")
clock = pygame.time.Clock()
pygame.font.init()
myfont = pygame.font.SysFont(None, 30)
#lives = 150

#Setting Icon_____________________________________________________________
icon = pygame.image.load("slime.png")
pygame.display.set_icon(icon)

#________________Loading Graphics___________________________________
background = pygame.image.load(path.join(img_dir, "map2.png")).convert()
background_rect = background.get_rect()

tan_background = pygame.image.load(path.join(img_dir, "wood1.jpg")).convert()
tan_background = pygame.transform.scale(tan_background, (699, 600))
tan_background_rect = tan_background.get_rect()

aliengreen_img = pygame.image.load(path.join(img_dir, "monster.png")).convert()

start_button = pygame.image.load(path.join(img_dir, "button.png")).convert()
button_pressed = pygame.image.load(path.join(img_dir, "button_pressed.png")).convert()

tower_img = pygame.image.load(path.join(img_dir, "tank.png")).convert()
#_____________Defining Variables for Classes________________________
counter = 800
lives = 150
can_move = False
can_add = True

xc = WIDTH/2    #x coordinate of the tank
yc = HEIGHT* 1/4  #y coordinate of the tank
s = 50 #scale of the tower (lengthx width cause square)
speed = 1.5 #speed of bullet
size = 10 #size of bullet (square)


#_______________________________________________________
#Defining the Calls
#Creating Sprite Groups
icons = pygame.sprite.Group()
buttons = pygame.sprite.Group()
enemies = pygame.sprite.Group()
towers = pygame.sprite.Group()
bullets = pygame.sprite.Group()

target = []



#__________________Defining Classes__________________________________________
class button(pygame.sprite.Sprite):
    def __init__(self, x, y):
        pygame.sprite.Sprite.__init__(self)
        self.x = x
        self.y = y
        self.image = pygame.transform.scale(start_button, (64, 32))
        self.rect = self.image.get_rect()
        self.image.set_colorkey(WHITE)
        self.rect.centerx = self.x
        self.rect.centery = self.y

    def pressed(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.transform.scale(button_pressed, (64, 32))
        self.image.set_colorkey(WHITE)
        
class enemy(pygame.sprite.Sprite):
    def __init__(self, x, y, speedx, speedy, health):
        pygame.sprite.Sprite.__init__(self)
        self.x = x
        self.y = y
        self.speedx = speedx
        self.speedy = speedy
        self.health = health
        self.image = None

class greenalien(enemy, pygame.sprite.Sprite):
    def __init__(self, x, y, speedx, speedy, health):
        super().__init__(x, y, speedx, speedy, health)
        pygame.sprite.Sprite.__init__(self)
        
        self.image = pygame.transform.scale(aliengreen_img, (32,32))
        self.image.set_colorkey(WHITE)
        self.rect = self.image.get_rect()
        self.rect.centerx = self.x
        self.rect.centery = self.y
        self.collidex = 0
        self.collidey = 0
        
    def update(self): # Set up all different conditions so no overlap occurs

        if self.rect.centerx < 36 and self.speedy == 0.00001:
            self.speedx = 0
            self.speedy = 1
        if self.rect.centery > 198 and self.speedx == 0:
            self.speedx = 1
            self.speedy = 0.0001
        if self.rect.centerx > 670 and self.speedy == 0.0001:
            self.speedx = 0.0001
            self.speedy = 1
        if self.rect.centery > 340 and self.speedx == 0.0001:
            self.speedx = -1
            self.speedy = 0.000001
        if self.rect.centerx < 40 and self.speedy == 0.000001:
            self.speedx = 0.0000001
            self.speedy = 1
        if self.rect.centery > 438 and self.speedx == 0.0000001:
            self.speedx = 1
            self.speedy = 0
            
        if self.rect.centerx > 699 and self.rect.centery > 400:
            global lives # Declares lives as global variable 
            lives -= 1
            self.health = 0
            
        if self.health <= 0:
            self.kill()
        #~~~~~~~~~~~~~~~~~~Moving the enemy~~~~~~
        if can_move == True:
            self.rect.centerx += self.speedx
            self.rect.centery += self.speedy
    def xcoordinates(self):
        print("yes")
        self.collidex = self.rect.centerx
        print(self.collidex)
        pygame.quit()
        #return(self.collidex)
        
class icon(pygame.sprite.Sprite):
    pass

class Towers(pygame.sprite.Sprite):
    def __init__(self,x,y,s):
        pygame.sprite.Sprite.__init__(self)
        self.x = x
        self.y = y
        self.s = s
        self.image = pygame.transform.scale(tower_img, (self.s,self.s))
        self.image.set_colorkey(WHITE)
        self.rect = self.image.get_rect()
        self.rect.centerx = self.x
        self.rect.centery = self.y
        self.radius = 200
        self.timer = 0
        self.attack_speed = 100 #.5 seconds delay ebtween shots
    def shoot(self,mousex,mousey,speed,size):
        self.mousex = mousex
        self.mousey = mousey
        self.size = size
        self.speed = speed
        self.timer += dt
        bullet = ammos(self.rect.centerx,self.rect.top,self.mousex,self.mousey,self.speed,self.size)
        if self.timer >= self.attack_speed:
            #print("yes")
            self.timer -= self.attack_speed
            bullets.add(bullet)
            #print("bullet")


class ammos(pygame.sprite.Sprite):     #Class of all ammo/bullets/owie thingies
    def __init__(self, x, y, mousex, mousey, speed, size):
        pygame.sprite.Sprite.__init__(self)
        self.x = x
        self.y = y
        self.size = size
        self.gotox = mousex
        self.gotoy = mousey

        self.image = pygame.Surface((self.size, self.size))
        self.image.fill(BLACK)
        self.rect = self.image.get_rect()


        self.speed = speed


        self.dx = self.gotox - self.x
        self.dy = self.gotoy - self.y

        self.slope = (self.dy / max(1, self.dx))
        self.gotox += self.gotox * self.slope
        self.gotoy += self.gotoy * self.slope
        self.dist = max(1, math.hypot(self.dx, self.dy))

        self.rect.centerx = self.x
        self.rect.centery = self.y
        


    def update(self,dt):
        self.vx = self.speed * (self.dx / self.dist)
        self.vy = self.speed * (self.dy / self.dist)
        self.x += self.vx
        self.y += self.vy

        self.rect.center = (self.x,self.y)
        

        if self.rect.bottom < 0 or self.rect.top > 519 or self.rect.left > 699 or self.rect.right < 0:
            self.kill()
            #print("dead")  

#Placing Tower
tower = Towers(xc,yc,s)
towers.add(tower)

#Extra Variables idk about__________________________________________
icong = greenalien(550, 550, 0, 0, 1)
icons.add(icong)

buttonStart = button(32, 550)
buttons.add(buttonStart)


#_________________GAME LOOP___________________________________
running = True

while running:
    clock.tick(FPS)
    dt = clock.tick(FPS)
    text_lives = myfont.render('Lives : %d' % lives, False, (0, 0, 0))
    mousex, mousey = pygame.mouse.get_pos()
    
    if not enemies:
        can_move = False
        can_add = True
        counter = 800

    #Procesing Events_____________________________________
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:  
            running = False
        #if event.type == pygame.KEYDOWN:
            #if event.key == pygame.K_SPACE:
                #tower.shoot(mousex,mousey,speed,size)
        if event.type == pygame.MOUSEBUTTONDOWN:
            x, y = event.pos
            print(x, y)
            if icong.rect.collidepoint(x, y):
                if can_add == True:
                    alieng = greenalien(counter, 92, -1, 0.00001, 1)
                    enemies.add(alieng)
                    counter += 32
                    
            if buttonStart.rect.collidepoint(x, y):
                can_move = True
                can_add = False

                buttonStart.pressed()


    #Background First ~~~~~~~~~~~~~~~~~~
    screen.blit(tan_background, background_rect)
    screen.blit(background, background_rect)
    screen.blit(text_lives,(0,580))
    
    #Collisions________________________________________
    enemyhits = pygame.sprite.groupcollide(bullets, enemies, True, True)
    towerRange = pygame.sprite.groupcollide(towers, enemies, False, False, pygame.sprite.collide_circle)
 
    enemyhits = pygame.sprite.groupcollide(bullets, enemies, True, True)
    towerRange = pygame.sprite.groupcollide(towers, enemies, False, False, pygame.sprite.collide_circle)
    if towerRange:
        for i in enemies:
            target.append(i)
            enemyx = i.rect.centerx
            enemyy = i.rect.centery
        tower.shoot(enemyx,enemyy,speed,size)


        
    
    #~~~~~Update~~~~~~~~~~~~~    screen.blit(background, background_rect)
    enemies.update()
    buttons.update()
    bullets.update(dt)
   #Draw~~~~~~~~~~~~~~~~~~
    icons.draw(screen)
    enemies.draw(screen)
    buttons.draw(screen)
    towers.draw(screen)
    bullets.draw(screen)
    
    pygame.display.flip()
pygame.quit()
